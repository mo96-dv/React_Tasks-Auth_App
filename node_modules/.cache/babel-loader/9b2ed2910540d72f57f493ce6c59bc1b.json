{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mo'men Data\\\\Training\\\\Routing-Authentication\\\\Auth\\\\src\\\\components\\\\authentication\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport classes from './Auth.module.css';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory(); // we want to output our Values In the Input Fields...\n\n  const emailRef = useRef();\n  const passwordRef = useRef(); // To toggle between (LOGIN && Sign UP)\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandeler = e => {\n    e.preventDefault();\n    setIsLoading(true); // Handling The Fetching Progress\n\n    const enteredEmail = emailRef.current.value;\n    const enteredPassword = passwordRef.current.value;\n    let url;\n    const signUpUrl = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBcKcoWoh0SZEY8r9GsL9x-lYW7PRNAuo8';\n    const signInUrl = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBcKcoWoh0SZEY8r9GsL9x-lYW7PRNAuo8';\n\n    if (isLogin) {\n      url = signInUrl;\n    } else {\n      url = signUpUrl;\n    }\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json().then(data => {\n          console.log(data);\n          history.replace('/');\n        });\n      } else {\n        return res.json().then(data => {\n          let errorMessage = data.error.message;\n          throw new Error(errorMessage);\n        }).catch(error => {\n          alert(error.message);\n        });\n      }\n    });\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandeler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: emailRef,\n          type: \"email\",\n          autoComplete: \"username\",\n          id: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: passwordRef,\n          type: \"password\",\n          autoComplete: \"current-password\",\n          id: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending Request....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"WV5RCwPYxYC6qCOnnp8KIoNKBFs=\", false, function () {\n  return [useHistory];\n});\n\n_c = Auth;\nexport default Auth; // method: 'POST',\n//      headers: { 'Content-Type': 'application/json' },\n//      body: JSON.stringify({\n//        email: enteredEmail,\n//        password: enteredPassword,\n//        returnSecureToken: true\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["E:/Mo'men Data/Training/Routing-Authentication/Auth/src/components/authentication/Auth.js"],"names":["React","useState","useRef","classes","useHistory","Auth","isLogin","setIsLogin","isLoading","setIsLoading","history","emailRef","passwordRef","switchAuthModeHandler","prevState","submitHandeler","e","preventDefault","enteredEmail","current","value","enteredPassword","url","signUpUrl","signInUrl","fetch","method","headers","body","JSON","stringify","email","password","returnSecureToken","then","res","ok","json","data","console","log","replace","errorMessage","error","message","Error","catch","alert","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport classes from './Auth.module.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Auth = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  // we want to output our Values In the Input Fields...\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  // To toggle between (LOGIN && Sign UP)\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandeler = (e) => {\r\n    e.preventDefault();\r\n\r\n    setIsLoading(true);\r\n    // Handling The Fetching Progress\r\n    const enteredEmail = emailRef.current.value;\r\n    const enteredPassword = passwordRef.current.value;\r\n    let url;\r\n    const signUpUrl =\r\n      'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBcKcoWoh0SZEY8r9GsL9x-lYW7PRNAuo8';\r\n    const signInUrl =\r\n      'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBcKcoWoh0SZEY8r9GsL9x-lYW7PRNAuo8';\r\n\r\n    if (isLogin) {\r\n      url = signInUrl;\r\n    } else {\r\n      url = signUpUrl;\r\n    }\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        email: enteredEmail,\r\n        password: enteredPassword,\r\n        returnSecureToken: true,\r\n      }),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json().then((data) => {\r\n          console.log(data);\r\n          history.replace('/');\r\n        });\r\n      } else {\r\n        return res\r\n          .json()\r\n          .then((data) => {\r\n            let errorMessage = data.error.message;\r\n            throw new Error(errorMessage);\r\n          })\r\n          .catch((error) => {\r\n            alert(error.message);\r\n          });\r\n      }\r\n    });\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <section className={classes.auth}>\r\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\r\n      <form onSubmit={submitHandeler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor='email'>Your Email</label>\r\n          <input\r\n            ref={emailRef}\r\n            type='email'\r\n            autoComplete='username'\r\n            id='email'\r\n            required\r\n          />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor='password'>Your Password</label>\r\n          <input\r\n            ref={passwordRef}\r\n            type='password'\r\n            autoComplete='current-password'\r\n            id='password'\r\n            required\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          {!isLoading && (\r\n            <button>{isLogin ? 'Login' : 'Create Account'}</button>\r\n          )}\r\n          {isLoading && <p>Sending Request....</p>}\r\n          <button\r\n            type='button'\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLogin ? 'Create new account' : 'Login with existing account'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n\r\n// method: 'POST',\r\n//      headers: { 'Content-Type': 'application/json' },\r\n//      body: JSON.stringify({\r\n//        email: enteredEmail,\r\n//        password: enteredPassword,\r\n//        returnSecureToken: true\r\n"]},"metadata":{},"sourceType":"module"}