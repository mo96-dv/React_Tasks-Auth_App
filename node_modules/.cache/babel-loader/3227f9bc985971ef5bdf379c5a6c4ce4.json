{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mo'men Data\\\\Training\\\\Routing-Authentication\\\\Auth\\\\src\\\\components\\\\tasks\\\\TaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport classes from './TaskForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Taskform = props => {\n  _s();\n\n  // Responsble On Posting THE data Inside The Form. (( Post Request ))\n  const TaskDetailsRef = useRef();\n  const TaskEndTimeRef = useRef();\n  const [isValid, setIsValid] = useState(true); // const [sendedData, setSendedData] = useState();\n\n  const submitHandeler = e => {\n    e.preventDefault();\n    const EnteredDetails = TaskDetailsRef.current.value;\n    const EnteredEndTime = TaskEndTimeRef.current.value;\n    const randomNum = Math.round(Math.random() * 10000);\n\n    if (EnteredDetails === '' || EnteredEndTime === '') {\n      setIsValid(false);\n      return;\n    } else {\n      setIsValid(true);\n    }\n\n    const TasksInputs = {\n      taskDetails: EnteredDetails,\n      taskEndDate: EnteredEndTime,\n      taskId: randomNum\n    };\n    props.onAddTask(TasksInputs); // Thats Not A good WAY TO RESET THE BECAUSE IT'S MANIBULATE THE VALUE (( STATE IS BETTER )) BUT IT'S A DEMO !!\n\n    TaskDetailsRef.current.value = '';\n    TaskEndTimeRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.auth,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enter Your Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandeler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Task Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: TaskDetailsRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Task End Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: TaskEndTimeRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onSubmit: submitHandeler,\n            children: \"Submit Your Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), !isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: '15px',\n            color: 'darkred',\n            border: '3px solid darkred',\n            fontWeight: 'bold'\n          },\n          children: \"YOU MUST FILL BOTH FEILDS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Taskform, \"ZuAXLQXLS+VIWzIWHAuCbawmXeo=\");\n\n_c = Taskform;\nexport default Taskform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Taskform\");","map":{"version":3,"sources":["E:/Mo'men Data/Training/Routing-Authentication/Auth/src/components/tasks/TaskForm.js"],"names":["React","useState","useRef","classes","Taskform","props","TaskDetailsRef","TaskEndTimeRef","isValid","setIsValid","submitHandeler","e","preventDefault","EnteredDetails","current","value","EnteredEndTime","randomNum","Math","round","random","TasksInputs","taskDetails","taskEndDate","taskId","onAddTask","auth","control","actions","marginTop","color","border","fontWeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B;AAEA,QAAMC,cAAc,GAAGJ,MAAM,EAA7B;AACA,QAAMK,cAAc,GAAGL,MAAM,EAA7B;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC,CAL0B,CAM1B;;AAEA,QAAMS,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,cAAc,GAAGP,cAAc,CAACQ,OAAf,CAAuBC,KAA9C;AACA,UAAMC,cAAc,GAAGT,cAAc,CAACO,OAAf,CAAuBC,KAA9C;AACA,UAAME,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CAAlB;;AAEA,QAAIP,cAAc,KAAK,EAAnB,IAAyBG,cAAc,KAAK,EAAhD,EAAoD;AAClDP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD,KAHD,MAGO;AACLA,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACD,UAAMY,WAAW,GAAG;AAClBC,MAAAA,WAAW,EAAET,cADK;AAElBU,MAAAA,WAAW,EAAEP,cAFK;AAGlBQ,MAAAA,MAAM,EAAEP;AAHU,KAApB;AAMAZ,IAAAA,KAAK,CAACoB,SAAN,CAAgBJ,WAAhB,EAnB4B,CAqB5B;;AACAf,IAAAA,cAAc,CAACQ,OAAf,CAAuBC,KAAvB,GAA+B,EAA/B;AACAR,IAAAA,cAAc,CAACO,OAAf,CAAuBC,KAAvB,GAA+B,EAA/B;AACD,GAxBD;;AA0BA,sBACE;AAAA,2BACE;AAAS,MAAA,SAAS,EAAEZ,OAAO,CAACuB,IAA5B;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAEhB,cAAhB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEP,OAAO,CAACwB,OAAxB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAU,YAAA,GAAG,EAAErB;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAEH,OAAO,CAACwB,OAAxB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,GAAG,EAAEpB;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eASE;AAAK,UAAA,SAAS,EAAEJ,OAAO,CAACyB,OAAxB;AAAA,iCACE;AAAQ,YAAA,QAAQ,EAAElB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,EAYG,CAACF,OAAD,iBACC;AACE,UAAA,KAAK,EAAE;AACLqB,YAAAA,SAAS,EAAE,MADN;AAELC,YAAAA,KAAK,EAAE,SAFF;AAGLC,YAAAA,MAAM,EAAE,mBAHH;AAILC,YAAAA,UAAU,EAAE;AAJP,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgCD,CAlED;;GAAM5B,Q;;KAAAA,Q;AAoEN,eAAeA,QAAf","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport classes from './TaskForm.module.css';\r\n\r\nconst Taskform = (props) => {\r\n  // Responsble On Posting THE data Inside The Form. (( Post Request ))\r\n\r\n  const TaskDetailsRef = useRef();\r\n  const TaskEndTimeRef = useRef();\r\n  const [isValid, setIsValid] = useState(true);\r\n  // const [sendedData, setSendedData] = useState();\r\n\r\n  const submitHandeler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const EnteredDetails = TaskDetailsRef.current.value;\r\n    const EnteredEndTime = TaskEndTimeRef.current.value;\r\n    const randomNum = Math.round(Math.random() * 10000);\r\n\r\n    if (EnteredDetails === '' || EnteredEndTime === '') {\r\n      setIsValid(false);\r\n      return;\r\n    } else {\r\n      setIsValid(true);\r\n    }\r\n    const TasksInputs = {\r\n      taskDetails: EnteredDetails,\r\n      taskEndDate: EnteredEndTime,\r\n      taskId: randomNum,\r\n    };\r\n\r\n    props.onAddTask(TasksInputs);\r\n\r\n    // Thats Not A good WAY TO RESET THE BECAUSE IT'S MANIBULATE THE VALUE (( STATE IS BETTER )) BUT IT'S A DEMO !!\r\n    TaskDetailsRef.current.value = '';\r\n    TaskEndTimeRef.current.value = '';\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className={classes.auth}>\r\n        <h1>Enter Your Tasks</h1>\r\n        <form onSubmit={submitHandeler}>\r\n          <div className={classes.control}>\r\n            <label>Task Details</label>\r\n            <textarea ref={TaskDetailsRef} />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label>Task End Time</label>\r\n            <input ref={TaskEndTimeRef} />\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <button onSubmit={submitHandeler}>Submit Your Task</button>\r\n          </div>\r\n          {!isValid && (\r\n            <p\r\n              style={{\r\n                marginTop: '15px',\r\n                color: 'darkred',\r\n                border: '3px solid darkred',\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              YOU MUST FILL BOTH FEILDS\r\n            </p>\r\n          )}\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Taskform;\r\n"]},"metadata":{},"sourceType":"module"}