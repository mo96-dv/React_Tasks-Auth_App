{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mo'men Data\\\\Training\\\\Routing-Authentication\\\\Auth\\\\src\\\\components\\\\tasks\\\\TaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport classes from './TaskForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Taskform = props => {\n  _s();\n\n  // Responsble On Posting THE data Inside The Form. (( Post Request ))\n  const TaskDetailsRef = useRef();\n  const TaskEndTimeRef = useRef(); // const [sendedData, setSendedData] = useState();\n\n  const submitHandeler = e => {\n    e.preventDefault();\n    const EnteredDetails = TaskDetailsRef.current.value;\n    const EnteredEndTime = TaskEndTimeRef.current.value;\n    const randomNum = Math.round(Math.random() * 100);\n\n    if (EnteredDetails === '' || EnteredEndTime === '') {\n      alert('You Must Fill Both Field');\n    }\n\n    const TasksInputs = {\n      taskDetails: EnteredDetails,\n      taskEndDate: EnteredEndTime,\n      taskId: randomNum\n    };\n    props.onAddTask(TasksInputs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.auth,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enter Your Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandeler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Task Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: TaskDetailsRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Task End Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: TaskEndTimeRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onSubmit: submitHandeler,\n            children: \"Submit Your Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Taskform, \"XoGgzST/sD+aMahBPe17apk6B8Y=\");\n\n_c = Taskform;\nexport default Taskform; // if (res.ok) {\n//   return res.json().then((data) => { setSendedData(data);\n//   });\n// } else {\n//   return res\n//     .json()\n//     .then((data) => {\n//       let errorMessage = data.error.message;\n//       throw new Error(errorMessage);\n//     })\n//     .catch((error) => {\n//       alert(error.message);\n//     });\n// }\n// fetch(\n//   `https://second-demo-auth-post-get-default-rtdb.firebaseio.com/ ${id}`,\n//   {\n//     method: 'DELETE',\n//   }\n// )\n//   .then((res) => res.json())\n//   .then((data) => {\n//     console.log(data);\n//     console.log(sendedData);\n//   });\n// curl -X DELETE \\\n//   'https://[PROJECT_ID].firebaseio.com/users/jack/name/last.json'\n//   // POSTING REQUEST:\n//   const url =\n//     'https://second-demo-auth-post-get-default-rtdb.firebaseio.com/Task.json';\n//   const posting = async () => {\n//     const response = await fetch(url, {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({\n//         taskDetails: EnteredDetails,\n//         taskEndDate: EnteredEndTime,\n//         taskId: randomNum,\n//       }),\n//     });\n//     const data = await response.json();\n//     console.log(data);\n//   };\n//   posting();\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"Taskform\");","map":{"version":3,"sources":["E:/Mo'men Data/Training/Routing-Authentication/Auth/src/components/tasks/TaskForm.js"],"names":["React","useRef","classes","Taskform","props","TaskDetailsRef","TaskEndTimeRef","submitHandeler","e","preventDefault","EnteredDetails","current","value","EnteredEndTime","randomNum","Math","round","random","alert","TasksInputs","taskDetails","taskEndDate","taskId","onAddTask","auth","control","actions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B;AAEA,QAAMC,cAAc,GAAGJ,MAAM,EAA7B;AACA,QAAMK,cAAc,GAAGL,MAAM,EAA7B,CAJ0B,CAK1B;;AAEA,QAAMM,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,cAAc,GAAGL,cAAc,CAACM,OAAf,CAAuBC,KAA9C;AACA,UAAMC,cAAc,GAAGP,cAAc,CAACK,OAAf,CAAuBC,KAA9C;AACA,UAAME,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAlB;;AAEA,QAAIP,cAAc,KAAK,EAAnB,IAAyBG,cAAc,KAAK,EAAhD,EAAoD;AAClDK,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACD;;AACD,UAAMC,WAAW,GAAG;AAClBC,MAAAA,WAAW,EAAEV,cADK;AAElBW,MAAAA,WAAW,EAAER,cAFK;AAGlBS,MAAAA,MAAM,EAAER;AAHU,KAApB;AAMAV,IAAAA,KAAK,CAACmB,SAAN,CAAgBJ,WAAhB;AACD,GAjBD;;AAmBA,sBACE;AAAA,2BACE;AAAS,MAAA,SAAS,EAAEjB,OAAO,CAACsB,IAA5B;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAEjB,cAAhB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEL,OAAO,CAACuB,OAAxB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAU,YAAA,GAAG,EAAEpB;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAEH,OAAO,CAACuB,OAAxB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,GAAG,EAAEnB;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eASE;AAAK,UAAA,SAAS,EAAEJ,OAAO,CAACwB,OAAxB;AAAA,iCACE;AAAQ,YAAA,QAAQ,EAAEnB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoBD,CA9CD;;GAAMJ,Q;;KAAAA,Q;AAgDN,eAAeA,QAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { useRef } from 'react';\r\nimport classes from './TaskForm.module.css';\r\n\r\nconst Taskform = (props) => {\r\n  // Responsble On Posting THE data Inside The Form. (( Post Request ))\r\n\r\n  const TaskDetailsRef = useRef();\r\n  const TaskEndTimeRef = useRef();\r\n  // const [sendedData, setSendedData] = useState();\r\n\r\n  const submitHandeler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const EnteredDetails = TaskDetailsRef.current.value;\r\n    const EnteredEndTime = TaskEndTimeRef.current.value;\r\n    const randomNum = Math.round(Math.random() * 100);\r\n\r\n    if (EnteredDetails === '' || EnteredEndTime === '') {\r\n      alert('You Must Fill Both Field');\r\n    }\r\n    const TasksInputs = {\r\n      taskDetails: EnteredDetails,\r\n      taskEndDate: EnteredEndTime,\r\n      taskId: randomNum,\r\n    };\r\n\r\n    props.onAddTask(TasksInputs);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className={classes.auth}>\r\n        <h1>Enter Your Tasks</h1>\r\n        <form onSubmit={submitHandeler}>\r\n          <div className={classes.control}>\r\n            <label>Task Details</label>\r\n            <textarea ref={TaskDetailsRef} />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label>Task End Time</label>\r\n            <input ref={TaskEndTimeRef} />\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <button onSubmit={submitHandeler}>Submit Your Task</button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Taskform;\r\n\r\n// if (res.ok) {\r\n//   return res.json().then((data) => { setSendedData(data);\r\n//   });\r\n// } else {\r\n//   return res\r\n//     .json()\r\n//     .then((data) => {\r\n//       let errorMessage = data.error.message;\r\n//       throw new Error(errorMessage);\r\n//     })\r\n//     .catch((error) => {\r\n//       alert(error.message);\r\n//     });\r\n// }\r\n\r\n// fetch(\r\n//   `https://second-demo-auth-post-get-default-rtdb.firebaseio.com/ ${id}`,\r\n//   {\r\n//     method: 'DELETE',\r\n//   }\r\n// )\r\n//   .then((res) => res.json())\r\n//   .then((data) => {\r\n//     console.log(data);\r\n//     console.log(sendedData);\r\n//   });\r\n\r\n// curl -X DELETE \\\r\n//   'https://[PROJECT_ID].firebaseio.com/users/jack/name/last.json'\r\n\r\n//   // POSTING REQUEST:\r\n\r\n//   const url =\r\n//     'https://second-demo-auth-post-get-default-rtdb.firebaseio.com/Task.json';\r\n\r\n//   const posting = async () => {\r\n//     const response = await fetch(url, {\r\n//       method: 'POST',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify({\r\n//         taskDetails: EnteredDetails,\r\n//         taskEndDate: EnteredEndTime,\r\n//         taskId: randomNum,\r\n//       }),\r\n//     });\r\n//     const data = await response.json();\r\n\r\n//     console.log(data);\r\n//   };\r\n//   posting();\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}