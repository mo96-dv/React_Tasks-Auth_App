{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mo'men Data\\\\Training\\\\Routing-Authentication\\\\Auth\\\\src\\\\components\\\\authentication\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport classes from './Auth.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false); // we want to output our Values In the Input Fields...\n\n  const emailRef = useRef();\n  const passwordRef = useRef(); // To toggle between (LOGIN && Sign UP)\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandeler = e => {\n    e.preventDefault();\n    setIsLoading(true); // Handling The Fetching Progress\n\n    const enteredEmail = emailRef.current.value;\n    const enteredPassword = passwordRef.current.value;\n    const url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=[API_KEY]';\n\n    const postSignIn = async () => {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n    };\n\n    postSignIn();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandeler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: emailRef,\n          type: \"email\",\n          id: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: passwordRef,\n          type: \"password\",\n          id: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending Request....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"rumziy2QAAWlkSyCRXBgRJhElRk=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["E:/Mo'men Data/Training/Routing-Authentication/Auth/src/components/authentication/Auth.js"],"names":["React","useState","useRef","classes","Auth","isLogin","setIsLogin","isLoading","setIsLoading","emailRef","passwordRef","switchAuthModeHandler","prevState","submitHandeler","e","preventDefault","enteredEmail","current","value","enteredPassword","url","postSignIn","response","fetch","method","headers","body","JSON","stringify","email","password","returnSecureToken","data","json","console","log","auth","control","actions","toggle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C,CAFiB,CAIjB;;AACA,QAAMQ,QAAQ,GAAGP,MAAM,EAAvB;AACA,QAAMQ,WAAW,GAAGR,MAAM,EAA1B,CANiB,CAQjB;;AACA,QAAMS,qBAAqB,GAAG,MAAM;AAClCL,IAAAA,UAAU,CAAEM,SAAD,IAAe,CAACA,SAAjB,CAAV;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AAEAP,IAAAA,YAAY,CAAC,IAAD,CAAZ,CAH4B,CAI5B;;AACA,UAAMQ,YAAY,GAAGP,QAAQ,CAACQ,OAAT,CAAiBC,KAAtC;AACA,UAAMC,eAAe,GAAGT,WAAW,CAACO,OAAZ,CAAoBC,KAA5C;AACA,UAAME,GAAG,GACP,qFADF;;AAGA,UAAMC,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAChCI,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFuB;AAGhCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,KAAK,EAAEb,YADY;AAEnBc,UAAAA,QAAQ,EAAEX,eAFS;AAGnBY,UAAAA,iBAAiB,EAAE;AAHA,SAAf;AAH0B,OAAN,CAA5B;AASA,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,KAZD;;AAcAX,IAAAA,UAAU;AACX,GAzBD;;AA2BA,sBACE;AAAS,IAAA,SAAS,EAAElB,OAAO,CAACiC,IAA5B;AAAA,4BACE;AAAA,gBAAK/B,OAAO,GAAG,OAAH,GAAa;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEQ,cAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEV,OAAO,CAACkC,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,GAAG,EAAE5B,QAAZ;AAAsB,UAAA,IAAI,EAAC,OAA3B;AAAmC,UAAA,EAAE,EAAC,OAAtC;AAA8C,UAAA,QAAQ;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAEN,OAAO,CAACkC,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,GAAG,EAAE3B,WAAZ;AAAyB,UAAA,IAAI,EAAC,UAA9B;AAAyC,UAAA,EAAE,EAAC,UAA5C;AAAuD,UAAA,QAAQ;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACmC,OAAxB;AAAA,mBACG,CAAC/B,SAAD,iBACC;AAAA,oBAASF,OAAO,GAAG,OAAH,GAAa;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAIGE,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJhB,eAKE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAEJ,OAAO,CAACoC,MAFrB;AAGE,UAAA,OAAO,EAAE5B,qBAHX;AAAA,oBAKGN,OAAO,GAAG,oBAAH,GAA0B;AALpC;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CApED;;GAAMD,I;;KAAAA,I;AAsEN,eAAeA,IAAf","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport classes from './Auth.module.css';\r\n\r\nconst Auth = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // we want to output our Values In the Input Fields...\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  // To toggle between (LOGIN && Sign UP)\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandeler = (e) => {\r\n    e.preventDefault();\r\n\r\n    setIsLoading(true);\r\n    // Handling The Fetching Progress\r\n    const enteredEmail = emailRef.current.value;\r\n    const enteredPassword = passwordRef.current.value;\r\n    const url =\r\n      'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=[API_KEY]';\r\n\r\n    const postSignIn = async () => {\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          email: enteredEmail,\r\n          password: enteredPassword,\r\n          returnSecureToken: true,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      console.log(data);\r\n    };\r\n\r\n    postSignIn();\r\n  };\r\n\r\n  return (\r\n    <section className={classes.auth}>\r\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\r\n      <form onSubmit={submitHandeler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor='email'>Your Email</label>\r\n          <input ref={emailRef} type='email' id='email' required />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor='password'>Your Password</label>\r\n          <input ref={passwordRef} type='password' id='password' required />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          {!isLoading && (\r\n            <button>{isLogin ? 'Login' : 'Create Account'}</button>\r\n          )}\r\n          {isLoading && <p>Sending Request....</p>}\r\n          <button\r\n            type='button'\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLogin ? 'Create new account' : 'Login with existing account'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}